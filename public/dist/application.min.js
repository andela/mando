"use strict";var ApplicationConfiguration=function(){var applicationModuleName="andonation",applicationModuleVendorDependencies=["ngResource","toaster","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","youtube-embed","ngLodash","ngTable"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#"===window.location.href[window.location.href.length-1]&&window.location.href.length-window.location.origin.length===2&&(window.location.href=window.location.origin+"/#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("banker"),ApplicationConfiguration.registerModule("campaign"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("distributor"),ApplicationConfiguration.registerModule("users"),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("allUsers",{url:"/admin/users",templateUrl:"modules/admin/views/users.admin.client.view.html"})}]),angular.module("admin").controller("ModalInstanceCtrl",["$scope","adminBackendService","$modalInstance","roles","len","$timeout",function($scope,adminBackendService,$modalInstance,roles,len,$timeout){$scope.NoOfUser=len,adminBackendService.getRoles().success(function(data,status,header,config){if($scope.roles=data,1===len)for(var i=0;i<roles.length;i++)for(var j=0;j<$scope.roles.length;j++)roles[i].roleType===$scope.roles[j].roleType&&(roles[i].isAdmin===!0&&($scope.roles[j].isAdmin=roles[i].isAdmin),$scope.roles[j].count=roles[i].count,$scope.roles[j].checked=!0);else for(var x=0;x<roles.length;x++)for(var y=0;y<$scope.roles.length;y++)roles[x].roleType===$scope.roles[y].roleType&&(roles[x].isAdmin===!0&&($scope.roles[y].isAdmin=roles[x].isAdmin),$scope.roles[y].count=roles[x].count,$scope.roles[y].count<len?$scope.roles[y].checked="indeterminate":$scope.roles[y].checked=!0)}).error(function(error,status,header,config){}),$scope.disableSaveButton=function(isAdmin,checkStatus){$timeout(function(){"indeterminate"!==checkStatus&&isAdmin&&($scope.disable=isAdmin&&checkStatus)},100)},$scope.ok=function(){$modalInstance.close($scope.roles)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("admin").controller("adminUserCtrl",["$scope","Authentication","adminBackendService","$location","lodash","$state","$modal","toaster","$timeout",function($scope,Authentication,adminBackendService,$location,lodash,$state,$modal,toaster,$timeout){$scope.authentication=Authentication,Authentication.requireLogin($state),Authentication.requireRole($state,"admin","userCampaigns"),adminBackendService.getUsers().success(function(data,status,header,config){$scope.users=data;for(var i=0;i<$scope.users.length;i++)$scope.users[i].checked=!1}).error(function(error,status,header,config){$scope.error=error}),$scope.noChecked=!0,$scope.check=function(){$timeout(function(){for(var count=0,i=0;i<$scope.users.length;i++)$scope.users[i].checked&&count++;$scope.noChecked=0===count,$scope.allChecked=count===$scope.users.length},100)},$scope.checkAll=function(){$timeout(function(){if($scope.allChecked){for(var i=0;i<$scope.users.length;i++)$scope.users[i].checked=!0;$scope.noChecked=!1}else{for(var j=0;j<$scope.users.length;j++)$scope.users[j].checked=!1;$scope.noChecked=!0}},100)},$scope.openModal=function(){var roles=[],NoOfCheckedUsers=0;angular.forEach($scope.users,function(user,key){if(user.checked){NoOfCheckedUsers++;for(var i=0;i<user.roles.length;i++)if(NoOfCheckedUsers>1)if(lodash.findWhere(roles,{roleType:user.roles[i].roleType})){var temp=lodash.findWhere(roles,{roleType:user.roles[i].roleType});temp.count++}else"admin"===user.roles[i].roleType&&user._id===$scope.authentication.user._id&&(user.roles[i].isAdmin=!0),user.roles[i].count=1,roles.push(user.roles[i]);else"admin"===user.roles[i].roleType&&user._id===$scope.authentication.user._id&&(user.roles[i].isAdmin=!0),user.roles[i].count=1,roles.push(user.roles[i])}}),$scope.modalInstance=$modal.open({templateUrl:"modules/admin/views/updateRoles.admin.modal.client.view.html",controller:"ModalInstanceCtrl",size:"sm",resolve:{roles:function(){return roles},len:function(){return NoOfCheckedUsers}}}),$scope.modalInstance.result.then(function(roles){var data={};data.roles=[];var addRoles={addRoles:[]},rmRoles={rmRoles:[]};data.usersid=[],angular.forEach($scope.users,function(user){user.checked&&data.usersid.push(user._id)});for(var y=0;y<roles.length;y++)roles[y].checked===!0?addRoles.addRoles.push(roles[y]._id):roles[y].checked===!1&&rmRoles.rmRoles.push(roles[y]._id);data.roles.push(addRoles),data.roles.push(rmRoles),adminBackendService.updateUserRoles(data).success(function(data,status,header,config){$scope.users=data,$scope.allChecked=!1,$scope.noChecked=!0,toaster.pop("success","User Roles updated successfully")}).error(function(error,status,header,config){toaster.pop("error","Error Occured, Please try again or contact the Admin")})})}}]),angular.module("campaign").factory("adminBackendService",["$http",function($http){var getUsers=function(){return $http.get("/admin/users")},getRoles=function(){return $http.get("/admin/roles")},updateUserRoles=function(data){return $http.put("/admin/user/roles/edit",data)};return{getUsers:getUsers,updateUserRoles:updateUserRoles,getRoles:getRoles}}]),angular.module("banker").config(["$stateProvider",function($stateProvider){$stateProvider.state("bank",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},url:"/bank",controller:"transactionCtrl",templateUrl:"modules/banker/views/bankers.client.view.html"})}]),angular.module("banker").controller("transactionCtrl",["$scope","Authentication","$http","$timeout","toaster","$modal","subledgerServices","lodash","credentials","$state",function($scope,Authentication,$http,$timeout,toaster,$modal,subledgerServices,lodash,credentials,$state){Authentication.requireLogin($state),Authentication.requireRole($state,"banker","userCampaigns"),$scope.reports=[],$scope.journal=[],$scope.withdrawal={},$scope.balance={amount:""},$scope.isBanker=Authentication.hasRole("banker");var cred=credentials.data;subledgerServices.setCredentials(cred),subledgerServices.setCredentials(cred),$scope.authentication=Authentication,$scope.getBankBalance=function(account){subledgerServices.getBalance(account,function(response){$scope.balance.amount=response,$scope.$digest()})},$scope.getBankBalance(cred.bank_id),$scope.getJournals=function(account){subledgerServices.getJournals(account,function(response){$scope.journal=response.posted_lines,$scope.$digest()})},$scope.getJournals(cred.bank_id),$scope.withdrawFromBank=function(amount,user){subledgerServices.bankerAction("debit",amount,cred.system_id,cred.bank_id,$scope.authentication.user,function(){$scope.getBankBalance(cred.bank_id),$scope.getJournals(cred.bank_id)})},$scope.depositIntoBank=function(amount,user){subledgerServices.bankerAction("credit",amount,cred.system_id,cred.bank_id,$scope.authentication.user,function(){$scope.getBankBalance(cred.bank_id),$scope.getJournals(cred.bank_id)})},$scope.openModalWithdraw=function(size){var modalInstance=$modal.open({templateUrl:"modules/banker/views/withdraw.modal.view.html",controller:"withdrawalModalInstanceCtrl",size:size,resolve:{transaction:function(){return $scope.balance.amount}}});modalInstance.result.then(function(amount){$scope.withdrawFromBank(amount),toaster.pop("success","Transaction Completed")})},$scope.openModalDeposit=function(size){var modalInstance=$modal.open({templateUrl:"modules/banker/views/deposit.modal.view.html",controller:"depositModalInstanceCtrl",size:size});modalInstance.result.then(function(amount){$scope.depositIntoBank(amount),toaster.pop("success","Transaction Completed")})}}]),angular.module("banker").controller("withdrawalModalInstanceCtrl",["$scope","$modalInstance","transaction",function($scope,$modalInstance,transaction){$scope.withdraw=0,$scope.systemBalance=transaction,$scope.checkBalance=function(){$scope.systemBalance<$scope.withdraw?($scope.accountIsLower=!0,$scope.message=!0):($scope.accountIsLower=!1,$scope.message=!1)},$scope.ok=function(withdraw){$modalInstance.close(withdraw)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("banker").controller("depositModalInstanceCtrl",["$scope","$modalInstance",function($scope,$modalInstance){$scope.deposit=0,$scope.ok=function(deposit){$modalInstance.close(deposit)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("banker").factory("subledgerServices",["$http","toaster",function($http,toaster){var subledger=new Subledger,credentials={},cred={},setCredentials=function(data){subledger.setCredentials(data.key_id,data.secret_id),cred=data},getSystemBalance=function(org_id,book_id,account_id){return subledger.organization(org_id).book(book_id).account(account_id)},createAndPostTransaction=function(org_id,book_id){return subledger.organization(org_id).book(book_id).journalEntry()},getJournalReports=function(org_id,book_id,account_id){var org=subledger.organization(org_id),book=org.book(book_id),account=book.account(account_id);return account.line()},getCredentials=function(){return $http.get("/bank/credentials").success(function(data,status,header,config){credentials=data})},getBalance=function(account,cb){var date=(new Date).toISOString();getSystemBalance(cred.org_id,cred.book_id,account).balance({description:"USD",at:date},function(error,apiRes){if(error)return error;var amount=parseInt(apiRes.balance.value.amount);cb(amount)})},bankerAction=function(action,transaction,initiatorAccount,recipientAccount,initiator,cb){var otherAction="debit"===action?"credit":"debit",description="debit"===action?transaction.reason||"Cash Withrawal from Bank":transaction.reason||"Cash Deposit To Bank",initiatorToString=JSON.stringify({name:initiator.displayName,email:initiator.email,description:description});createAndPostTransaction(cred.org_id,cred.book_id).createAndPost({effective_at:(new Date).toISOString(),description:initiatorToString,reference:"http://andonation-mando.herokuapp.com",lines:[{account:recipientAccount,description:initiatorToString,reference:"http://andonation-mando.herokuapp.com",value:{type:action,amount:transaction.amount}},{account:initiatorAccount,description:initiatorToString,reference:"http://andonation-mando.herokuapp.com",value:{type:otherAction,amount:transaction.amount}}]},function(error,apiRes){return error?error:void cb(apiRes)})},getJournals=function(account,cb){getJournalReports(cred.org_id,cred.book_id,account).get({description:"USD",action:"before",effective_at:(new Date).toISOString()},function(error,apiRes){if(error)return error;for(var i=0;i<apiRes.posted_lines.length;i++)try{var stringToObj=JSON.parse(apiRes.posted_lines[i].description);apiRes.posted_lines[i].description=stringToObj}catch(e){apiRes.posted_lines[i].description={name:"anonymous",description:apiRes.posted_lines[i].description}}cb(apiRes)})};return{getSystemBalance:getSystemBalance,createAndPostTransaction:createAndPostTransaction,getJournalReports:getJournalReports,getCredentials:getCredentials,setCredentials:setCredentials,getBalance:getBalance,bankerAction:bankerAction,getJournals:getJournals}}]),angular.module("campaign").config(["$stateProvider","datepickerConfig","$sceDelegateProvider",function($stateProvider,datepickerConfig,$sceDelegateProvider){datepickerConfig.startingDay="1",$stateProvider.state("addCampaign",{url:"/campaign/add",templateUrl:"modules/campaigns/views/addCampaign.client.view.html"}).state("editCampaign",{url:"/campaign/:campaignTimestamp/:campaignslug/edit",templateUrl:"modules/campaigns/views/editCampaign.client.view.html"}).state("viewCampaign",{url:"/campaign/:campaignTimeStamp/:campaignslug",resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},templateUrl:"modules/campaigns/views/viewCampaign.client.view.html",controller:"viewCampaignCtrl"}).state("allCampaigns",{url:"/campaigns",templateUrl:"modules/campaigns/views/allCampaigns.client.view.html"}).state("allTransactions",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},controller:"userTransactionCtrl",url:"/myTransactions",templateUrl:"modules/campaigns/views/userTransaction.client.view.html"}).state("userCampaigns",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},url:"/campaigns/myAndonation",templateUrl:"modules/campaigns/views/userCampaigns.client.view.html",controller:"userCampaignsCtrl"}).state("allCampaignsBacked",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},url:"/campaignIBacked",templateUrl:"/modules/campaigns/views/campaignsIBacked.client.view.html",controller:"campaignsIBackedCtrl"}).state("allMyCampaigns",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},url:"/allMyCampaigns",templateUrl:"/modules/campaigns/views/allMyCampaigns.client.view.html",controller:"allMyCampaignCtrl"}),$sceDelegateProvider.resourceUrlWhitelist(["**"])}]),angular.module("campaign").controller("addCampaignCtrl",["$scope","toaster","backendService","$location","Authentication","youtubeEmbedUtils","$state",function($scope,toaster,backendService,$location,Authentication,youtubeEmbedUtils,$state){$scope.authentication=Authentication,$scope.campaign={},$scope.minDate=moment().add(1,"days"),$scope.maxDate=moment().add(30,"days"),Authentication.requireLogin($state),$scope.addCampaign=function(){$scope.campaign.youtubeUrl=youtubeEmbedUtils.getIdFromURL($scope.campaign.validYoutubeUrl),backendService.addCampaign($scope.campaign).success(function(data,status,header,config){toaster.pop("success",$scope.campaign.title,"Campaign created successfully"),$location.path("/campaign/"+data.slug)}).error(function(error,status,header,config){$scope.error=error})},$scope.validateYoutubeUrl=function(url,isValid){if(!isValid)return void($scope.youtubeError="Please enter a valid youtube Url");var youtubeId=youtubeEmbedUtils.getIdFromURL(url);return youtubeId===url?void($scope.youtubeError="Please enter a valid youtube URL"):void backendService.checkYouTubeUrl(youtubeId).success(function(result){$scope.youtubeError=""}).error(function(error){$scope.youtubeError=error})},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("campaign").controller("allCampaignCtrl",["$scope","$rootScope","$location","backendService","currentStatus","daysLeftService",function($scope,$rootScope,$location,backendService,currentStatus,daysLeftService){$scope.selectedCampaigns=[],$scope.criteria="created",$scope.currentPage=1,$scope.itemsPerPage=21,$scope.totalItems=1,$scope.activeStatus=$rootScope.currentStatus,$scope.init=function(campaignStatus){backendService.getCampaigns().success(function(data,status,header,config){$scope.campaigns=data,$scope.selectedCampaigns=[],angular.forEach(data,function(item){daysLeftService.getDaysLeft(item.dueDate,function(daysLeft,deadlineStyle){item.daysLeft=daysLeft}),item.status===campaignStatus&&$scope.selectedCampaigns.push(item)}),currentStatus.state=$rootScope.currentStatus,$scope.totalItems=data.length,$scope.filterCampaigns()}).error(function(error,status,header,config){return error})},$scope.filterCampaigns=function(){var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.startItems=begin+1,end<$scope.totalItems?$scope.endItems=end:$scope.endItems=$scope.totalItems,$scope.Campaigns=$scope.campaigns.slice(begin,end)},$scope.pageChanged=function(){$scope.filterCampaigns()},$scope.showSelected=function(state){$scope.activeStatus=state,$rootScope.currentStatus=state,$scope.selectedCampaigns=[],$scope.init($scope.activeStatus)},$scope.showSelected($rootScope.currentStatus||"active"),$scope.init($rootScope.currentStatus||"active")}]).factory("currentStatus",[function(){return{}}]),angular.module("campaign").controller("allMyCampaignCtrl",["$scope","backendService","Authentication","$state",function($scope,backendService,Authentication,$state){$scope.myCampaigns=[],$scope.authentication=Authentication,Authentication.requireLogin($state);var userid=$scope.authentication.user._id;backendService.getUserCampaigns(userid).success(function(data){$scope.myCampaigns=data}).error(function(error,status,header,config){$location.path("/")})}]),angular.module("campaign").controller("campaignsIBackedCtrl",["$scope","backendService","ngTableParams","$filter","subledgerServices","credentials",function($scope,backendService,ngTableParams,$filter,subledgerServices,credentials){var cred=credentials.data;subledgerServices.setCredentials(cred),backendService.campaignsIBacked().success(function(data){$scope.campaignsBacked=data;for(var i=0;i<data.length;i++)$scope.getCampaignBalance(data[i].campaignid.account_id,$scope.campaignsBacked[i].campaignid);$scope.tableParams=new ngTableParams({page:1,count:data.length,sorting:{title:"asc"}},{counts:[],total:data.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")(data,params.orderBy()):data;$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})}),$scope.getCampaignBalance=function(account,destination){subledgerServices.getBalance(account,function(response){destination.raised=response,$scope.$digest()})}}]),angular.module("campaign").controller("editCampaignCtrl",["$scope","toaster","backendService","$location","Authentication","$stateParams","youtubeEmbedUtils","$state",function($scope,toaster,backendService,$location,Authentication,$stateParams,youtubeEmbedUtils,$state){$scope.authentication=Authentication,Authentication.requireLogin($state),$scope.getCampaign=function(){backendService.getCampaign($stateParams.campaignTimestamp+"/"+$stateParams.campaignslug).success(function(data,status){$scope.authentication.user._id!==data.createdBy._id&&$location.path("/campaign/"+data.slug),$scope.minDate=moment(data.created),$scope.maxDate=moment(data.created).add(30,"days"),$scope.campaign=data,$scope.campaign.youtubeUrl="https://www.youtube.com/watch?v="+data.youtubeUrl}).error(function(err){toaster.pop("error","An Error Occurred"+err)})},$scope.getCampaign(),$scope.editCampaign=function(){delete $scope.campaign.createdBy,delete $scope.campaign.created,$scope.campaign.youtubeUrl=youtubeEmbedUtils.getIdFromURL($scope.campaign.youtubeUrl),backendService.updateCampaign($scope.campaign).success(function(data,status,header,config){toaster.pop("success","Campaign Edited Successfully"),$location.path("/campaign/"+data.slug)}).error(function(err,status,header,config){$scope.error=err,toaster.pop("error","An Error Occurred:"+err)})},$scope.validateYoutubeUrl=function(url){var youtubeId=youtubeEmbedUtils.getIdFromURL(url);return youtubeId===url?void($scope.youtubeError="Please enter a valid youtube URL"):void backendService.checkYouTubeUrl(youtubeId).success(function(result){$scope.youtubeError=""}).error(function(error){$scope.youtubeError=error})},$scope.deleteCampaign=function(data,toastr){var confirmMsg=confirm("Do you want to delete this Campaign?");confirmMsg&&backendService.deleteCampaign($scope.campaign._id).success(function(text){toaster.pop("success",$scope.campaign.title,"Campaign deleted successfully"),$location.path("/campaigns/myAndonation")}).error(function(error){})},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("campaign").controller("supportCampaignCtrl",["$scope","campaign","amountNeeded","subledgerServices","Authentication","$modalInstance","backendService",function($scope,campaign,amountNeeded,subledgerServices,Authentication,$modalInstance,backendService){subledgerServices.getBalance(Authentication.user.account_id,function(response){$scope.userAccountBalance=response,$scope.$digest()}),subledgerServices.getBalance(campaign.accountid,function(response){$scope.campaignBalance=response,$scope.$digest()}),$scope.amountNeeded=amountNeeded;var createCampaignBacker=function(){var backer={amountDonated:$scope.amount,transactionType:"credit",campaignid:campaign.id};backendService.createCampaignBacker(backer)};$scope.ok=function(){createCampaignBacker();var transaction={amount:$scope.amount,reason:"Support campaign"};subledgerServices.bankerAction("credit",transaction,Authentication.user.account_id,campaign.accountid,Authentication.user,function(response){$scope.amount+$scope.campaignBalance>=$scope.amountNeeded?backendService.fundCampaign(campaign.id).success(function(response){$modalInstance.close(!0)}).error(function(err){console.log("error",err)}):$modalInstance.close(!0)})},$scope.cancel=function(){$modalInstance.dismiss("cancelled")}}]),angular.module("campaign").controller("userCampaignsCtrl",["$scope","backendService","toaster","$location","subledgerServices","Authentication","$stateParams","lodash","credentials","$state","ngTableParams","$filter",function($scope,backendService,toaster,$location,subledgerServices,Authentication,$stateParams,lodash,credentials,$state,ngTableParams,$filter){$scope.myCampaigns=[],$scope.systemBalance={},$scope.balance={},$scope.journal=[],$scope.myJournal=[],$scope.authentication=Authentication,Authentication.requireLogin($state),$scope.isAdmin=Authentication.hasRole("admin"),$scope.isBanker=Authentication.hasRole("banker"),$scope.query=$scope.authentication.user.displayName;var cred=credentials.data;subledgerServices.setCredentials(cred),$scope.isDistributor=Authentication.hasRole("distributor");var userid=$scope.authentication.user._id;backendService.campaignsIBacked().success(function(data){$scope.campaignsBacked=data,$scope.noOfCampaignsBacked=data.length;for(var i=0;i<data.length;i++)$scope.getCampaignBalance(data[i].campaignid.account_id,$scope.campaignsBacked[i].campaignid);$scope.tableParams=new ngTableParams({page:1,count:data.length,sorting:{title:"asc"}},{counts:[],total:data.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")(data,params.orderBy()):data;$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})}),backendService.getUserCampaigns(userid).success(function(data){$scope.myCampaigns=data;for(var i=0;i<$scope.myCampaigns.length;i++){var accountNo=data[i].account_id;$scope.getCampaignBalance(accountNo,$scope.myCampaigns[i])}}).error(function(error,status,header,config){$location.path("/")}),$scope.getCampaignBalance=function(account,destination){subledgerServices.getBalance(account,function(response){destination.raised=response,$scope.$digest()})},$scope.getCurrentBalance=function(account,destination){subledgerServices.getBalance(account,function(response){destination.amount=response,$scope.$digest()})},$scope.getCurrentBalance(cred.bank_id,$scope.systemBalance),$scope.getCurrentBalance($scope.authentication.user.account_id,$scope.balance),$scope.getJournals=function(account,cb){subledgerServices.getJournals(account,function(response){response=response.posted_lines,cb(response)})},$scope.getJournals(cred.bank_id,function(response){$scope.journal=response,$scope.$digest();for(var i=0;i<$scope.journal.length;i++)$scope.query===$scope.journal[i].description.name&&($scope.hasDistributions=!0)}),$scope.getJournals($scope.authentication.user.account_id,function(response){$scope.myJournal=response,$scope.$digest()}),$scope.limit=3}]),angular.module("campaign").controller("userTransactionCtrl",["$scope","$http","$state","subledgerServices","Authentication","credentials",function($scope,$http,$state,subledgerServices,Authentication,credentials){$scope.authentication=Authentication,$scope.journal={},$scope.balance={},Authentication.requireLogin($state);var cred=credentials.data;subledgerServices.setCredentials(cred),$scope.authentication=Authentication;var getCurrentBalance=function(account,destination){subledgerServices.getBalance(account,function(response){destination.amount=response,$scope.$digest()})};getCurrentBalance($scope.authentication.user.account_id,$scope.balance);var getJournals=function(account){subledgerServices.getJournals(account,function(response){$scope.journal=response.posted_lines,$scope.$digest()})};getJournals($scope.authentication.user.account_id)}]),angular.module("campaign").controller("viewCampaignCtrl",["credentials","$scope","toaster","backendService","$location","Authentication","$stateParams","$modal","subledgerServices","ngTableParams","$filter","$timeout","progressBarService","daysLeftService",function(credentials,$scope,toaster,backendService,$location,Authentication,$stateParams,$modal,subledgerServices,ngTableParams,$filter,$timeout,progressBarService,daysLeftService){var userAccountBalance;$scope.buttonValue="SUPPORT",$scope.authentication=Authentication;var cred=credentials.data;subledgerServices.setCredentials(cred);var getCampaigns=function(){backendService.getCampaign($stateParams.campaignTimeStamp+"/"+$stateParams.campaignslug).success(function(data,status,header,config){$scope.campaign=data,daysLeftService.getDaysLeft($scope.campaign.dueDate,function(daysLeft,deadlineStyle){$scope.daysLeft=daysLeft,$scope.deadlineStyle=deadlineStyle}),"funded"===$scope.campaign.status?($scope.buttonValue="FUNDED",$scope.daysLeft="none"):"expired"===$scope.campaign.status&&($scope.buttonValue="EXPIRED"),$scope.dateFunded=$scope.campaign.dateFunded,getCampaignBalance($scope.campaign.account_id),getUserAccountBalance(Authentication.user.account_id),getCampaignBackersHistory(data._id),$scope.authentication.user._id===$scope.campaign.createdBy._id&&($scope.ownCampaign=!0)}).error(function(error,status,header,config){$location.path("/")})};getCampaigns();var getCampaignBackersHistory=function(campaignid){backendService.getCampaignBackers(campaignid).success(function(data){$scope.campaignBackers=data,$scope.tableParams=new ngTableParams({page:1,count:data.length,sorting:{"userid.displayName":"asc"}},{counts:[],total:data.length,getData:function($defer,params){var orderedData=params.sorting()?$filter("orderBy")(data,params.orderBy()):data;$defer.resolve(orderedData.slice((params.page()-1)*params.count(),params.page()*params.count()))}})})},getUserAccountBalance=function(userAccountid){subledgerServices.getBalance(userAccountid,function(response){userAccountBalance=response})},updateProgressbar=function(){progressBarService.updateProgressBar($scope.campaignBalance,$scope.campaign.amount,function(fundRaised,campaignFundPercentage){$scope.fundsRaised=fundRaised,$scope.campaignFundPercentage=campaignFundPercentage})},getCampaignBalance=function(campaignAccountid){subledgerServices.getBalance(campaignAccountid,function(response){$timeout(function(){$scope.campaignBalance=response,updateProgressbar(),getCampaigns()})})};$scope.openModal=function(){return $scope.authentication.user._id===$scope.campaign.createdBy._id?void($scope.modalInstance=$modal.open({templateUrl:"modules/campaigns/views/supportOwnCampaign.modal.client.view.html"})):($scope.modalInstance=$modal.open({templateUrl:"modules/campaigns/views/supportCampaign.modal.client.view.html",controller:"supportCampaignCtrl",size:"sm",resolve:{campaign:function(){return{accountid:$scope.campaign.account_id,id:$scope.campaign._id}},amountNeeded:function(){return $scope.campaign.amount}}}),void $scope.modalInstance.result.then(function(status){backendService.getCampaign($stateParams.campaignTimeStamp+"/"+$stateParams.campaignslug).success(function(data,status,header,config){toaster.pop("success","Success! - Thanks for supporting this campaign"),$scope.campaign=data,getCampaignBalance($scope.campaign.account_id),getCampaignBackersHistory(data._id),getUserAccountBalance(Authentication.user.account_id)})}))}}]),angular.module("campaign").filter("daysflt",function(){return function(value){var filteredDay;return filteredDay=value.hoursLeft?value.hoursLeft<=1?"1 Hour":value.hoursLeft+" Hours":1===value?"1 day":value>1?value+" days":"0 days"}}),angular.module("campaign").filter("currencyflt",function(){return function(num){if(num){for(var x=0;x<num.length;x+=3)x>2&&(num=num.slice(0,-x)+","+num.slice(-x),x++);return num="$"+num}return"$0"}}),angular.module("campaign").factory("backendService",["$http",function($http){var addCampaign=function(campaignData){return $http.post("/campaign/add",campaignData)},getCampaign=function(campaignid){return $http.get("/campaign/"+campaignid)},deleteCampaign=function(campaignid){return $http["delete"]("/campaign/"+campaignid)},checkYouTubeUrl=function(videoId){return $http.get("//gdata.youtube.com/feeds/api/videos/"+videoId+"?alt=json")},getUserCampaigns=function(userid){return $http.get("/campaigns/"+userid)},getCampaigns=function(){return $http.get("/campaigns")},updateCampaign=function(campaignData){return $http.put("/campaign/"+campaignData._id+"/edit",campaignData)},createCampaignBacker=function(backerData){return $http.post("/campaign/backer/new",backerData)},getCampaignBackers=function(campaignid){return $http.get("/campaigns/"+campaignid+"/backers")},campaignsIBacked=function(){return $http.get("/user/campaigns/backed")},fundCampaign=function(campaignId){return $http.put("/campaign/"+campaignId+"/fund")};return{addCampaign:addCampaign,getCampaign:getCampaign,checkYouTubeUrl:checkYouTubeUrl,getUserCampaigns:getUserCampaigns,updateCampaign:updateCampaign,deleteCampaign:deleteCampaign,getCampaigns:getCampaigns,createCampaignBacker:createCampaignBacker,getCampaignBackers:getCampaignBackers,campaignsIBacked:campaignsIBacked,fundCampaign:fundCampaign}}]),angular.module("campaign").factory("daysLeftService",function(){var getDaysLeft=function(dueDate,cb){var daysLeft,hoursLeft,deadlineStyle,currentDate=new Date(Date.now()),campaignDeadline=new Date(dueDate);daysLeft=Math.ceil((campaignDeadline-currentDate)/864e5),daysLeft>=10&&(deadlineStyle="success"),0===daysLeft?(hoursLeft=24-Math.floor(Math.abs((campaignDeadline-currentDate)/864e5*24)),0>=hoursLeft&&(hoursLeft=0),daysLeft={hoursLeft:hoursLeft},deadlineStyle="danger"):daysLeft>5&&10>daysLeft?deadlineStyle="warning":5>=daysLeft&&daysLeft>=0?deadlineStyle="danger":0>daysLeft&&(daysLeft="none"),cb(daysLeft,deadlineStyle)};return{getDaysLeft:getDaysLeft}}),angular.module("campaign").factory("progressBarService",function(){var updateProgressBar=function(campaignBalance,campaignAmount,cb){var fundRaised,campaignFundPercentage,fundsRatio=campaignBalance/campaignAmount;campaignFundPercentage=Math.floor(96*fundsRatio),0===campaignFundPercentage?(fundRaised=4,campaignFundPercentage=0):(fundRaised=campaignFundPercentage+Math.ceil(4*fundsRatio),campaignFundPercentage=fundRaised,4>campaignFundPercentage&&(fundRaised=4)),cb(fundRaised,campaignFundPercentage)};return{updateProgressBar:updateProgressBar}}),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","$rootScope","$http","$log",function($scope,Authentication,$rootScope,$http,$log){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){
$scope.isCollapsed=!1}),$scope.showActiveCampaigns=function(param){$rootScope.currentStatus=param},$scope.signOut=function(){$log.log("siginOut"),$http.get("/auth/signout").success(function(res){$scope.authentication=res})}}]),angular.module("core").controller("HomeController",["$scope","$rootScope","Authentication","backendService","daysLeftService",function($scope,$rootScope,Authentication,backendService,daysLeftService){$scope.authentication=Authentication,$scope.campaigns=[],$scope.activeCampaigns=[],$scope.fundedCampaigns=[],backendService.getCampaigns().success(function(data,status,header,config){$scope.campaigns=data,angular.forEach($scope.campaigns,function(item){daysLeftService.getDaysLeft(item.dueDate,function(daysLeft,deadlineStyle){item.daysLeft=daysLeft}),"active"===item.status?$scope.activeCampaigns.push(item):"funded"===item.status&&$scope.fundedCampaigns.push(item)})}).error(function(error,status,header,config){$scope.error=error}),$scope.updateStatus=function(param){$rootScope.currentStatus=param},$scope.myInterval=8e3,$scope.slides=[{image:"http://res.cloudinary.com/andela/image/upload/v1430297767/caros3_tmgpvr.jpg",caption:"All for one, One for all"},{image:"http://res.cloudinary.com/andela/image/upload/v1430311270/carousel5_adruh8.jpg",caption:"Donate and make a dream come true"},{image:"http://res.cloudinary.com/andela/image/upload/v1430298374/caros4_jlfcl1.jpg",caption:"Collaboration is the key to success"},{image:"http://res.cloudinary.com/andela/image/upload/v1430297249/carousll_ijwwov.jpg",caption:"Collaboration is the key to success"},{image:"http://res.cloudinary.com/andela/image/upload/v1430321432/carousel5_shgamo.jpg",caption:"Together we can do so much"}]}]),angular.module("core").directive("disableAnimation",["$animate",function($animate){return{restrict:"A",link:function($scope,$element,$attrs){$attrs.$observe("disableAnimation",function(value){$animate.enabled(!value,$element)})}}}]),angular.module("distributor").config(["$stateProvider",function($stateProvider){$stateProvider.state("distributorOverview",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},controller:"distributorCtrl",url:"/distributor",templateUrl:"modules/distributor/views/distributor.client.view.html"}).state("myDistribution",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},controller:"myDistribution",url:"/distributor/myDistribution",templateUrl:"modules/distributor/views/myDistribution.client.view.html"}).state("distributionUser",{resolve:{credentials:["$http",function($http){return $http.get("/bank/credentials")}]},controller:"userDistributionCtrl",url:"/distributor/:username",templateUrl:"modules/distributor/views/user.distributor.client.view.html"})}]),angular.module("distributor").controller("distributorCtrl",["$scope","Authentication","subledgerServices","distributorServices","$location","$state","$modal","toaster","credentials",function($scope,Authentication,subledgerServices,distributorServices,$location,$state,$modal,toaster,credentials){var cred=credentials.data;subledgerServices.setCredentials(cred),$scope.authentication=Authentication,Authentication.requireLogin($state),Authentication.requireRole($state,"distributor","userCampaigns"),$scope.getUsers=function(){distributorServices.getAllUsers().success(function(data){$scope.users=data;for(var i=0;i<$scope.users.length;i++){var accountNo=data[i].account_id;$scope.getCurrentBalance(accountNo,$scope.users[i])}}).error(function(error){$scope.error=error})},$scope.getUsers(),$scope.getCurrentBalance=function(account,destination){subledgerServices.getBalance(account,function(response){destination.amount=response,$scope.$digest()})},$scope.depositIntoUser=function(transaction,user){var confirmMsg=confirm("Are you sure you want to credit "+user.displayName);confirmMsg&&subledgerServices.bankerAction("credit",transaction,cred.bank_id,user.account_id,$scope.authentication.user,function(){toaster.pop("success","credited successfully"),$scope.getCurrentBalance(user.account_id,user)})},$scope.withdrawFromUser=function(transaction,user){var confirmMsg=confirm("Are you sure you want to debit "+user.displayName);return transaction.amount>user.amount?void toaster.pop("error","Balance is insufficient"):void(confirmMsg&&subledgerServices.bankerAction("debit",transaction,cred.bank_id,user.account_id,$scope.authentication.user,function(){toaster.pop("success","Transaction Completed"),$scope.getCurrentBalance(user.account_id,user)}))},$scope.distributorModal=function(user,cb){var modalInstance=$modal.open({templateUrl:"modules/distributor/views/distributor.modal.client.view.html",controller:"disModalInstanceCtrl",size:"sm"});modalInstance.result.then(function(transaction){cb(transaction,user)})}}]),angular.module("distributor").controller("disModalInstanceCtrl",["$scope","$modalInstance",function($scope,$modalInstance){$scope.ok=function(transaction){$modalInstance.close(transaction)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]),angular.module("distributor").controller("myDistribution",["$scope","$http","Authentication","$state","subledgerServices","credentials",function($scope,$http,Authentication,$state,subledgerServices,credentials){$scope.distribution=[],$scope.authentication=Authentication,$scope.query=$scope.authentication.user.displayName,$scope.isDistributor=Authentication.hasRole("distributor");var cred=credentials.data;subledgerServices.setCredentials(cred),subledgerServices.setCredentials(cred),Authentication.requireLogin($state),Authentication.requireRole($state,"distributor");var getDistributionJournal=function(accountId){subledgerServices.getJournals(accountId,function(response){$scope.distribution=response.posted_lines,$scope.$digest()})};getDistributionJournal(cred.bank_id)}]),angular.module("distributor").controller("userDistributionCtrl",["$scope","$http","Authentication","toaster","subledgerServices","distributorServices","$stateParams","credentials","$state",function($scope,$http,Authentication,toaster,subledgerServices,distributorServices,$stateParams,credentials,$state){$scope.user={},$scope.journal=[];var username=$stateParams.username;$scope.authentication=Authentication,Authentication.requireLogin($state),Authentication.requireRole($state,"banker","userCampaigns"),$scope.isDistributor=Authentication.hasRole("distributor");var cred=credentials.data;subledgerServices.setCredentials(cred);(function(username){distributorServices.getByUsername(username).success(function(data,status,header,config){$scope.getJournals(data.account_id)}).error(function(error,status,header,config){toaster.pop("error","Error Fetching File. Try Again Later")})})(username);$scope.getJournals=function(account){subledgerServices.getJournals(account,function(response){$scope.journal=response.posted_lines,$scope.$digest()})}}]),angular.module("distributor").factory("distributorServices",["$http",function($http){var subledger=new Subledger,cred={},setCredentials=function(data){subledger.setCredentials(data.key_id,data.secret_id),cred=data},getAllUsers=function(){return $http.get("/distributor/users")},getByUsername=function(username){return $http.get("/distributor/getByUsername/"+username)};return{getAllUsers:getAllUsers,setCredentials:setCredentials,getByUsername:getByUsername}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("/");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").factory("Authentication",["lodash",function(lodash){var _this=this,user=window.user;return _this._data={user:user,requireLogin:function($state,stateName){user||$state.go(stateName||"home")},hasRole:function(role){return lodash.findWhere(user.roles,{roleType:role})?!0:!1},requireRole:function($state,role,stateName){lodash.findWhere(user.roles,{roleType:role})||$state.go(stateName)}},_this._data}]);